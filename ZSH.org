#+title: ZSH Configuration
#+property: header-args sh :tangle .zshrc

* Preface

This generates the =.zshrc= config file for my shell.


* Set Variables

These are used in later sections to configure paths, aliases, etc.

#+begin_src sh 

  # SET ARCHITECTURE
  # ARCHITECTURE=$(uname -p)
  # SET OS
  # OPERATING_SYSTE=$(uname -a)
  # SET DOTFILES ROOT
  DOTFILES_ROOT=$HOME/.dotfiles

  if [ $(unama -p) == "arm" ]; then
    HOMEBREW_ROOT="/opt/homebrew"
  else
    HOMEBREW_ROOT="/usr/local"
  fi

#+end_src

** Set Editor to Emacs

#+begin_src sh

export EDITOR=emacs

#+end_src

* Z config

I use [[https://github.com/rupa/z/][rupa/z]] to quickly jump between directories.

#+begin_src sh

# CONFIG Z
_Z_DATA=$HOME/.local/.z

#+end_src

* Oh My ZSH config

I use [[https://ohmyz.sh/][Oh My ZSH]] for setting up a bunch of config options and easy features.

#+begin_src sh

  # Oh My ZSH CONFIG
  # Path to your oh-my-zsh installation.
  ZSH="$HOME/.oh-my-zsh"
  # Path to oh-my-zsh custom directory
  ZSH_CUSTOM="$DOTFILES_ROOT/zsh"
  # Default theme - replaced by Starship
  ZSH_THEME="candy"

  plugins=(git fzf vi-mode z)

  source $ZSH/oh-my-zsh.sh

#+end_src

* Fixing the PATH

This builds up my PATH

#+begin_src sh

  PATH="$HOME/.symfony/bin:$PATH" # Add Symfony binary
  PATH="$HOME/.cargo/bin:$PATH"   # Add Rust/Cargo bin
  PATH="$DOTFILES_ROOT/bin:$PATH" # Add custom scripts
  PATH="/usr/local/bin:/usr/local/sbin:$PATH" # Add /usr/local

  export -U PATH

#+end_src

* History Config

#+begin_src sh

  case $HIST_STAMPS in
    "mm/dd/yyyy") alias history='fc -fl 1' ;;
    "dd.mm.yyyy") alias history='fc -El 1' ;;
    "yyyy-mm-dd") alias history='fc -il 1' ;;
    ,*) alias history='fc -l 1' ;;
  esac

  setopt append_history # Append to the history file instead of replacing it
  setopt extended_history # save both start time and execution duration
  setopt hist_expire_dups_first # remove dups before unique events when trimmming history
  setopt hist_ignore_dups # ignore duplication command history list
  setopt hist_ignore_space # do not store commands with leading spaces to history
  setopt hist_verify # load history expansions into editing buffer instead of executing them directly
  setopt share_history # share command history data

#+end_src

* Language setup

#+begin_src sh

  # Prefer US English and use UTF-8
  export LANG="en_US"
  export LC_ALL="en_US.UTF-8"

#+end_src

* Use Lesspipe

#+begin_src sh

  # Make 'less' more.
  [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

#+end_src

* Use fzf for ripgrep

#+begin_src sh

  # MAKE FZF USE RIPGREP
  export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'

#+end_src

* Configure NNN

I am not 100% sure on [[https://github.com/jarun/nnn][nnn]], but I occasionally experiment with it.

#+begin_src sh

  # CONFIG NNN
  export NNN_PLUG='z:fzcd;f:finder;o:fzopen;d:diffs;p:preview-tui;i:imgview'
  export NNN_FCOLORS='c1e22d2e006033f7c6d6abc4'
  export NNN_FIFO="/tmp/nnn.fifo"
  alias nnn='nnn -e'

#+end_src

* Aliases

** Fix LS

Replace =ls= with =exa= and set default options (and icons).

#+begin_src sh

  # FIX LS
  if [[ "command -v exa" ]]; then
      alias l='exa -alh --icons'
      alias lt='exa -lhT'
  else
      alias l='ls -lah'
  fi

#+end_src

** Utility

#+begin_src sh

  alias h='cd ~'
  alias c='clear'
  alias :q='exit'

#+end_src

**  App Replacements

#+begin_src sh

  if [[ "command -v fd" ]]; then
      alias find="fd"
  fi

  if [[ "command -v bat" ]]; then
      alias c="bat"
  fi

  if [[ "command -v prettyping" ]]; then
      alias ping='prettyping --nolegend'
  fi

  if [[ "command -v gotop" ]]; then
      alias top='gotop'
  fi

  if [[ "command -v lazydocker" ]]; then
      alias ld='lazydocker'
  fi

  if [[ "command -v lazygit" ]]; then
      alias gg='lazygit'
  fi

#+end_src

** Git

#+begin_src sh

  alias g='git'
  function gc() { git checkout "${@:-master}"; } # Checkout master by default
  alias gco='gc'
  alias gst='git status'
  alias gca='git commit -v -a'
  alias gpo='git push origin'
  alias gpom='git push origin main'

#+end_src

** PHP & Symfony

#+begin_src sh

  alias sf=symfony
  alias sfc='symfony console'
  alias sfs='symfony serve'
  alias sfdr="sf doctrine:schema:drop --full-database --force -n && rm -rf /dev/shm/app && sf doctrine:migrations:migrate -n && sf doctrine:fixtures:load -n"
  alias sfcc="rm -rf /dev/shm/app && sf cache:clear"

#+end_src

** Fun

#+begin_src sh

  alias dadjoke="curl -H \"Accept: text/plain\" https://icanhazdadjoke.com/; echo"
  alias weather="curl wttr.in"

#+end_src

** Docker Compose

#+begin_src sh

  alias dcom='docker run --rm --interactive --tty --volume `pwd`:/app odev/composer'
  alias dcomi='docker run --rm --interactive --tty --volume `pwd`:/app odev/composer --ignore-platform-reqs'
  alias dnpm='docker run --rm --interactive --tty -v `pwd`:/usr/src/app -w /usr/src/app odev/node npm'
  alias dnpx='docker run --rm --interactive --tty -v `pwd`:/usr/src/app -w /usr/src/app odev/node npx'
  alias dsc='docker-compose exec php bin/console'
  alias dce='docker-compose exec'

#+end_src

** macOS utilities

#+begin_src sh

  # Trim new lines and copy to clipboard
  alias pbc="tr -d '\n' | pbcopy"

  # Flush Directory Service cache
  alias flushdns="dscacheutil -flushcache"

  # `o` with no arguments opens current directory
  # otherwise opens the given location
  function o() {
    if [ $# -eq 0 ]; then
      open .
    else
      open "$@"
    fi
  }
#+end_src

** YouTube-dl

#+begin_src sh

  alias yt=youtube-dl

#+end_src

* Starship Prompt setup

#+begin_src sh

  export STARSHIP_CONFIG=$DOTFILES_ROOT/config/starship/starship.toml
  eval "$(starship init zsh)"

#+end_src

* ZSH Syntax Highlighting and Substring Search

#+begin_src sh

  source $HOMEBREW_ROOT/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
  source $HOMEBREW_ROOT/share/zsh-history-substring-search/zsh-history-substring-search.zsh

#+end_src
